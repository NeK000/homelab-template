name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
        packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Connect Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:devrel-ci

      - name: Create app directory 
        run: |
          ssh -o "StrictHostKeyChecking no" ${{ secrets.VPS_USER }}@thor "mkdir -p ${{ secrets.VPS_APP_PATH }}"        

      - name: Copy
        run: |
          scp -r * ${{ secrets.VPS_USER }}@thor:${{ secrets.VPS_APP_PATH }}    

      - name: Ansible Galaxy update
        run: |
          ssh -o "StrictHostKeyChecking no" ${{ secrets.VPS_USER }}@thor "
          cd ${{ secrets.VPS_APP_PATH }}
          ansible-galaxy install -r requirements.yml
          "    

      - name: Execute ansible build
        run: |
          ssh -o "StrictHostKeyChecking no" ${{ secrets.VPS_USER }}@thor "
          cd ${{ secrets.VPS_APP_PATH }}
          ansible-playbook -b deploy.yml -e "docker_compose_generator_output_path=${{ secrets.VPS_APP_PATH }}"
          "

      - name: Deploy
        run: |
          ssh -o "StrictHostKeyChecking no" ${{ secrets.VPS_USER }}@thor "
            cd ${{ secrets.VPS_APP_PATH }}
            docker compose -f ${{ secrets.VPS_APP_PATH }}/compose.yaml pull
            docker compose -f ${{ secrets.VPS_APP_PATH }}/compose.yaml up -d 
          "               
      - name: Execute ansible build
        run: |
          ssh -o "StrictHostKeyChecking no" ${{ secrets.VPS_USER }}@thor "
          rm -rf ${{ secrets.VPS_APP_PATH }}
          "